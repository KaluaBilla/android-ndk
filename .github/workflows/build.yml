name: Build

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [aarch64, x86, riscv64, armv7]
      fail-fast: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake ninja-build make \
            autoconf automake libtool pkg-config texinfo gettext gperf \
            bison flex git xz-utils unzip nasm yasm python3 python3-pip python3-venv

      - name: Install pipx and Meson
        run: |
          python3 -m pip install --user pipx
          python3 -m pipx ensurepath
          export PATH="$HOME/.local/bin:$PATH"
          pipx install meson

      - name: Download Android NDK ZIP
        run: |
          NDK_VERSION="r29-beta4"
          NDK_ZIP="android-ndk-${NDK_VERSION}-linux.zip"
          curl -LO https://dl.google.com/android/repository/${NDK_ZIP}
          echo "ANDROID_NDK_ZIP=${{ github.workspace }}/${NDK_ZIP}" >> $GITHUB_ENV
          echo "ANDROID_NDK_VERSION=${NDK_VERSION}" >> $GITHUB_ENV

      - name: Download musl toolchain
        run: |
          case "${{ matrix.arch }}" in
            aarch64)
              URL="https://github.com/KaluaBilla/musl-toolchains/releases/download/idk/aarch64-linux-musl-cross.tgz"
              ;;
            armv7)
              URL="https://github.com/KaluaBilla/musl-toolchains/releases/download/idk/armv7l-linux-musleabihf-cross.tgz"
              ;;
            x86)
              URL="https://github.com/KaluaBilla/musl-toolchains/releases/download/idk/i686-linux-musl-cross.tgz"
              ;;
            riscv64)
              URL="https://github.com/KaluaBilla/musl-toolchains/releases/download/idk/riscv64-linux-musl-cross.tgz"
              ;;
            *)
              echo "Unsupported ARCH: ${{ matrix.arch }}"
              exit 1
              ;;
          esac

          TOOLCHAIN_DIR="$HOME/musl-${{ matrix.arch }}"
          mkdir -p "$TOOLCHAIN_DIR"
          curl -L $URL | tar -xz -C "$TOOLCHAIN_DIR" --strip-components=1

          echo "$TOOLCHAIN_DIR/bin" >> $GITHUB_PATH

      - name: Set ARCH
        run: echo "ARCH=${{ matrix.arch }}" >> $GITHUB_ENV

      - name: Build LLVM
        env:
          ARCH: ${{ matrix.arch }}
        run: bash ${{ github.workspace }}/build.sh

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: llvm-${{ matrix.arch }}
          path: |
            ${{ github.workspace }}/*.xz

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Show collected files
        run: ls -R artifacts

      - name: Set build date
        run: echo "BUILD_DATE=$(date +'%Y-%m-%d %H:%M:%S %Z')" >> $GITHUB_ENV  

      - name: Create GitHub Release and upload ZIPs
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: musl-${{ github.run_number }}
          name: "musl Build ${{ github.run_number }}"
          body: |
            musl build artifacts

            **Build Date:** ${{ env.BUILD_DATE }}
          files: artifacts/**/*.xz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
